openapi: 3.0.3

info:
  title: Stop Web API
  description: API for managing the Stop Game.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0

servers:
  - url: localhost:{port}/api/v1
    description: Localhost
    variables:
      port:
        default: '3000'

tags:
  - name: Game
    description: Manage new and existing game sessions and categories

components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: string
          description: Id of the category
          example: "animals"
        title:
          type: string
          description: Translated category title
          example: "Animals"

    GenericResponse:
      type: object
      properties:
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: Error code
                example: "INVALID_INPUT"
              title:
                type: string
                description: Short description of the error
                example: "Invalid Input"
              detail:
                type: string
                description: Detailed description of the error
                example: "The gameType must be one of the predefined values."

    GenericListResponse:
      allOf:
        - $ref: "#/components/schemas/GenericResponse"
        - properties:
            meta:
              type: object
              properties:
                totalCount:
                  type: integer
                  description: Total number of items available.
                  example: 100
                pageCount:
                  type: integer
                  description: Total number of pages available.
                  example: 10
                currentPage:
                  type: integer
                  description: The current page number.
                  example: 1
                itemsPerPage:
                  type: integer
                  description: Number of items per page.
                  example: 10
            links:
              type: object
              properties:
                self:
                  type: string
                  description: URL to the current page.
                  example: "/game/categories?page=1"
                next:
                  type: string
                  description: URL to the next page of results, if available.
                  example: "/game/categories?page=2"
                previous:
                  type: string
                  description: URL to the previous page of results, if available.
                  example: "/game/categories?page=1"

    GameCategoriesResponse:
      allOf:
        - $ref: '#/components/schemas/GenericListResponse'
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Category'

    GameSessionResponse:
      allOf:
        - $ref: '#/components/schemas/GenericResponse'
        - properties:
            data:
              type: object
              properties:
                sessionId:
                  type: string
                  example: "abc123"
                joinCode:
                  type: string
                  example: "XYZ456"

paths:
  /game/categories:
    get:
      tags: [Game]
      summary: List available game categories
      description: Retrieves a list of all available game categories for players to choose from.
      parameters:
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: A list of available game categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameCategoriesResponse'

  /game/session:
    post:
      tags: [Game]
      summary: Create a new game session
      description: Initializes a new game session with specified parameters and returns session details.
      requestBody:
        description: Data required to create a new game session
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - gameType
                - categories
              properties:
                gameType:
                  type: string
                  description: The type of game being played (e.g., standard, timed).
                  enum:
                    - standard
                  example: "standard"
                categories:
                  type: array
                  items:
                    type: string
                  description: A list of category IDs for the game.
                  example: ["animals", "countries", "names"]

      responses:
        '201':
          description: Successfully created a new game session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameSessionResponse'
        '400':
          description: Bad request due to invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
